------------------------------------------
textures/aedm7/aecell_decal_logo1
[ 0 ] [ no ] [

 Vertex 

#version 420
layout( location = 0 ) in vec3 position;
layout( location = 1 ) in vec4 color;
layout( location = 2 ) in vec2 tex0;
layout( std140 ) uniform Transforms {
	mat4 viewToClip;
	mat4 modelToView;
};
out vec2 frag_Tex;
out vec4 frag_Color;
void main(void) {
	gl_Position = viewToClip * modelToView * vec4( position, 1.0 );
	frag_Tex = tex0;
	frag_Color = color;
} 

 Fragment 

#version 420
in vec2 frag_Tex;
in vec4 frag_Color;
const vec4 gamma = vec4( 1.0 / 2.2 );
uniform sampler2D sampler0;
out vec4 fragment;
void main(void) {
	vec2 st = frag_Tex;
const float alphaGen = 0.2;
	vec4 t = texture( sampler0, st );
	fragment = pow( t * vec4( frag_Color.rgb, alphaGen ), gamma );
} 

 ]

------------------------------------------
textures/aedm7/aecell_decal_spawn1
[ 0 ] [ no ] [

 Vertex 

#version 420
layout( location = 0 ) in vec3 position;
layout( location = 1 ) in vec4 color;
layout( location = 2 ) in vec2 tex0;
layout( std140 ) uniform Transforms {
	mat4 viewToClip;
	mat4 modelToView;
};
out vec2 frag_Tex;
out vec4 frag_Color;
void main(void) {
	gl_Position = viewToClip * modelToView * vec4( position, 1.0 );
	frag_Tex = tex0;
	frag_Color = color;
} 

 Fragment 

#version 420
in vec2 frag_Tex;
in vec4 frag_Color;
const vec4 gamma = vec4( 1.0 / 2.2 );
uniform sampler2D sampler0;
out vec4 fragment;
void main(void) {
	vec2 st = frag_Tex;
const float alphaGen = 0.2;
	vec4 t = texture( sampler0, st );
	fragment = pow( t * vec4( frag_Color.rgb, alphaGen ), gamma );
} 

 ]

------------------------------------------
textures/aedm7/aecell_pads_gl
[ 0 ] [ no ] [

 Vertex 

#version 420
layout( location = 0 ) in vec3 position;
layout( location = 1 ) in vec4 color;
layout( location = 2 ) in vec2 tex0;
layout( std140 ) uniform Transforms {
	mat4 viewToClip;
	mat4 modelToView;
};
out vec2 frag_Tex;
out vec4 frag_Color;
void main(void) {
	gl_Position = viewToClip * modelToView * vec4( position, 1.0 );
	frag_Tex = tex0;
	frag_Color = color;
} 

 Fragment 

#version 420
in vec2 frag_Tex;
in vec4 frag_Color;
uniform mat2 texTransform;
const vec4 gamma = vec4( 1.0 / 2.2 );
uniform sampler2D sampler0;
out vec4 fragment;
void main(void) {
	vec2 st = texTransform * frag_Tex;
const float alphaGen = 0.2;
	vec4 t = texture( sampler0, st );
	fragment = pow( t * vec4( frag_Color.rgb, alphaGen ), gamma );
} 

 ]

------------------------------------------
textures/aedm7/aecell_pads_lg
[ 0 ] [ no ] [

 Vertex 

#version 420
layout( location = 0 ) in vec3 position;
layout( location = 1 ) in vec4 color;
layout( location = 2 ) in vec2 tex0;
layout( std140 ) uniform Transforms {
	mat4 viewToClip;
	mat4 modelToView;
};
out vec2 frag_Tex;
out vec4 frag_Color;
void main(void) {
	gl_Position = viewToClip * modelToView * vec4( position, 1.0 );
	frag_Tex = tex0;
	frag_Color = color;
} 

 Fragment 

#version 420
in vec2 frag_Tex;
in vec4 frag_Color;
uniform mat2 texTransform;
const vec4 gamma = vec4( 1.0 / 2.2 );
uniform sampler2D sampler0;
out vec4 fragment;
void main(void) {
	vec2 st = texTransform * frag_Tex;
const float alphaGen = 0.2;
	vec4 t = texture( sampler0, st );
	fragment = pow( t * vec4( frag_Color.rgb, alphaGen ), gamma );
} 

 ]

------------------------------------------
textures/aedm7/aecell_pads_mh
[ 0 ] [ no ] [

 Vertex 

#version 420
layout( location = 0 ) in vec3 position;
layout( location = 1 ) in vec4 color;
layout( location = 2 ) in vec2 tex0;
layout( std140 ) uniform Transforms {
	mat4 viewToClip;
	mat4 modelToView;
};
out vec2 frag_Tex;
out vec4 frag_Color;
void main(void) {
	gl_Position = viewToClip * modelToView * vec4( position, 1.0 );
	frag_Tex = tex0;
	frag_Color = color;
} 

 Fragment 

#version 420
in vec2 frag_Tex;
in vec4 frag_Color;
uniform mat2 texTransform;
const vec4 gamma = vec4( 1.0 / 2.2 );
uniform sampler2D sampler0;
out vec4 fragment;
void main(void) {
	vec2 st = texTransform * frag_Tex;
const float alphaGen = 0.2;
	vec4 t = texture( sampler0, st );
	fragment = pow( t * vec4( frag_Color.rgb, alphaGen ), gamma );
} 

 ]

------------------------------------------
textures/aedm7/aecell_pads_pg
[ 0 ] [ no ] [

 Vertex 

#version 420
layout( location = 0 ) in vec3 position;
layout( location = 1 ) in vec4 color;
layout( location = 2 ) in vec2 tex0;
layout( std140 ) uniform Transforms {
	mat4 viewToClip;
	mat4 modelToView;
};
out vec2 frag_Tex;
out vec4 frag_Color;
void main(void) {
	gl_Position = viewToClip * modelToView * vec4( position, 1.0 );
	frag_Tex = tex0;
	frag_Color = color;
} 

 Fragment 

#version 420
in vec2 frag_Tex;
in vec4 frag_Color;
uniform mat2 texTransform;
const vec4 gamma = vec4( 1.0 / 2.2 );
uniform sampler2D sampler0;
out vec4 fragment;
void main(void) {
	vec2 st = texTransform * frag_Tex;
const float alphaGen = 0.2;
	vec4 t = texture( sampler0, st );
	fragment = pow( t * vec4( frag_Color.rgb, alphaGen ), gamma );
} 

 ]

------------------------------------------
textures/aedm7/aecell_pads_quad
[ 0 ] [ no ] [

 Vertex 

#version 420
layout( location = 0 ) in vec3 position;
layout( location = 1 ) in vec4 color;
layout( location = 2 ) in vec2 tex0;
layout( std140 ) uniform Transforms {
	mat4 viewToClip;
	mat4 modelToView;
};
out vec2 frag_Tex;
out vec4 frag_Color;
void main(void) {
	gl_Position = viewToClip * modelToView * vec4( position, 1.0 );
	frag_Tex = tex0;
	frag_Color = color;
} 

 Fragment 

#version 420
in vec2 frag_Tex;
in vec4 frag_Color;
uniform mat2 texTransform;
const vec4 gamma = vec4( 1.0 / 2.2 );
uniform sampler2D sampler0;
out vec4 fragment;
void main(void) {
	vec2 st = texTransform * frag_Tex;
const float alphaGen = 0.2;
	vec4 t = texture( sampler0, st );
	fragment = pow( t * vec4( frag_Color.rgb, alphaGen ), gamma );
} 

 ]

------------------------------------------
textures/aedm7/aecell_pads_ra
[ 0 ] [ no ] [

 Vertex 

#version 420
layout( location = 0 ) in vec3 position;
layout( location = 1 ) in vec4 color;
layout( location = 2 ) in vec2 tex0;
layout( std140 ) uniform Transforms {
	mat4 viewToClip;
	mat4 modelToView;
};
out vec2 frag_Tex;
out vec4 frag_Color;
void main(void) {
	gl_Position = viewToClip * modelToView * vec4( position, 1.0 );
	frag_Tex = tex0;
	frag_Color = color;
} 

 Fragment 

#version 420
in vec2 frag_Tex;
in vec4 frag_Color;
uniform mat2 texTransform;
const vec4 gamma = vec4( 1.0 / 2.2 );
uniform sampler2D sampler0;
out vec4 fragment;
void main(void) {
	vec2 st = texTransform * frag_Tex;
const float alphaGen = 0.2;
	vec4 t = texture( sampler0, st );
	fragment = pow( t * vec4( frag_Color.rgb, alphaGen ), gamma );
} 

 ]

------------------------------------------
textures/aedm7/aecell_pads_rg
[ 0 ] [ no ] [

 Vertex 

#version 420
layout( location = 0 ) in vec3 position;
layout( location = 1 ) in vec4 color;
layout( location = 2 ) in vec2 tex0;
layout( std140 ) uniform Transforms {
	mat4 viewToClip;
	mat4 modelToView;
};
out vec2 frag_Tex;
out vec4 frag_Color;
void main(void) {
	gl_Position = viewToClip * modelToView * vec4( position, 1.0 );
	frag_Tex = tex0;
	frag_Color = color;
} 

 Fragment 

#version 420
in vec2 frag_Tex;
in vec4 frag_Color;
uniform mat2 texTransform;
const vec4 gamma = vec4( 1.0 / 2.2 );
uniform sampler2D sampler0;
out vec4 fragment;
void main(void) {
	vec2 st = texTransform * frag_Tex;
const float alphaGen = 0.2;
	vec4 t = texture( sampler0, st );
	fragment = pow( t * vec4( frag_Color.rgb, alphaGen ), gamma );
} 

 ]

------------------------------------------
textures/aedm7/aecell_pads_rl
[ 0 ] [ no ] [

 Vertex 

#version 420
layout( location = 0 ) in vec3 position;
layout( location = 1 ) in vec4 color;
layout( location = 2 ) in vec2 tex0;
layout( std140 ) uniform Transforms {
	mat4 viewToClip;
	mat4 modelToView;
};
out vec2 frag_Tex;
out vec4 frag_Color;
void main(void) {
	gl_Position = viewToClip * modelToView * vec4( position, 1.0 );
	frag_Tex = tex0;
	frag_Color = color;
} 

 Fragment 

#version 420
in vec2 frag_Tex;
in vec4 frag_Color;
uniform mat2 texTransform;
const vec4 gamma = vec4( 1.0 / 2.2 );
uniform sampler2D sampler0;
out vec4 fragment;
void main(void) {
	vec2 st = texTransform * frag_Tex;
const float alphaGen = 0.2;
	vec4 t = texture( sampler0, st );
	fragment = pow( t * vec4( frag_Color.rgb, alphaGen ), gamma );
} 

 ]

------------------------------------------
textures/aedm7/aecell_pads_sg
[ 0 ] [ no ] [

 Vertex 

#version 420
layout( location = 0 ) in vec3 position;
layout( location = 1 ) in vec4 color;
layout( location = 2 ) in vec2 tex0;
layout( std140 ) uniform Transforms {
	mat4 viewToClip;
	mat4 modelToView;
};
out vec2 frag_Tex;
out vec4 frag_Color;
void main(void) {
	gl_Position = viewToClip * modelToView * vec4( position, 1.0 );
	frag_Tex = tex0;
	frag_Color = color;
} 

 Fragment 

#version 420
in vec2 frag_Tex;
in vec4 frag_Color;
uniform mat2 texTransform;
const vec4 gamma = vec4( 1.0 / 2.2 );
uniform sampler2D sampler0;
out vec4 fragment;
void main(void) {
	vec2 st = texTransform * frag_Tex;
const float alphaGen = 0.2;
	vec4 t = texture( sampler0, st );
	fragment = pow( t * vec4( frag_Color.rgb, alphaGen ), gamma );
} 

 ]

------------------------------------------
textures/aedm7/aecell_pads_ya
[ 0 ] [ no ] [

 Vertex 

#version 420
layout( location = 0 ) in vec3 position;
layout( location = 1 ) in vec4 color;
layout( location = 2 ) in vec2 tex0;
layout( std140 ) uniform Transforms {
	mat4 viewToClip;
	mat4 modelToView;
};
out vec2 frag_Tex;
out vec4 frag_Color;
void main(void) {
	gl_Position = viewToClip * modelToView * vec4( position, 1.0 );
	frag_Tex = tex0;
	frag_Color = color;
} 

 Fragment 

#version 420
in vec2 frag_Tex;
in vec4 frag_Color;
uniform mat2 texTransform;
const vec4 gamma = vec4( 1.0 / 2.2 );
uniform sampler2D sampler0;
out vec4 fragment;
void main(void) {
	vec2 st = texTransform * frag_Tex;
const float alphaGen = 0.2;
	vec4 t = texture( sampler0, st );
	fragment = pow( t * vec4( frag_Color.rgb, alphaGen ), gamma );
} 

 ]

------------------------------------------
textures/bata3dm1/bata3dm1_floor6
[ 0 ] [ no ] [

 Vertex 

#version 420
layout( location = 0 ) in vec3 position;
layout( location = 1 ) in vec4 color;
layout( location = 2 ) in vec2 tex0;
layout( std140 ) uniform Transforms {
	mat4 viewToClip;
	mat4 modelToView;
};
out vec2 frag_Tex;
out vec4 frag_Color;
void main(void) {
	gl_Position = viewToClip * modelToView * vec4( position, 1.0 );
	frag_Tex = tex0;
	frag_Color = vec4( 1.0 );
} 

 Fragment 

#version 420
in vec2 frag_Tex;
in vec4 frag_Color;
uniform mat2 texTransform;
const vec4 gamma = vec4( 1.0 / 2.2 );
uniform sampler2D sampler0;
out vec4 fragment;
void main(void) {
	vec2 st = texTransform * frag_Tex;
const float alphaGen = 1.0;
	vec4 t = texture( sampler0, st );
	fragment = pow( t * vec4( frag_Color.rgb, alphaGen ), gamma );
} 

 ]

[ 1 ] [ no ] [

 Vertex 

#version 420
layout( location = 0 ) in vec3 position;
layout( location = 1 ) in vec4 color;
layout( location = 2 ) in vec2 tex0;
layout( std140 ) uniform Transforms {
	mat4 viewToClip;
	mat4 modelToView;
};
out vec2 frag_Tex;
out vec4 frag_Color;
void main(void) {
	gl_Position = viewToClip * modelToView * vec4( position, 1.0 );
	frag_Tex = tex0;
	frag_Color = vec4( 1.0 );
} 

 Fragment 

#version 420
in vec2 frag_Tex;
in vec4 frag_Color;
uniform mat2 texTransform;
const vec4 gamma = vec4( 1.0 / 2.2 );
uniform sampler2D sampler0;
out vec4 fragment;
void main(void) {
	vec2 st = texTransform * frag_Tex;
const float alphaGen = 1.0;
	vec4 t = texture( sampler0, st );
	fragment = pow( t * vec4( frag_Color.rgb, alphaGen ), gamma );
} 

 ]

[ 2 ] [ no ] [

 Vertex 

#version 420
layout( location = 0 ) in vec3 position;
layout( location = 1 ) in vec4 color;
layout( location = 2 ) in vec2 tex0;
layout( std140 ) uniform Transforms {
	mat4 viewToClip;
	mat4 modelToView;
};
out vec2 frag_Tex;
out vec4 frag_Color;
void main(void) {
	gl_Position = viewToClip * modelToView * vec4( position, 1.0 );
	frag_Tex = tex0;
	frag_Color = vec4( 1.0 );
} 

 Fragment 

#version 420
in vec2 frag_Tex;
in vec4 frag_Color;
const vec4 gamma = vec4( 1.0 / 2.2 );
uniform sampler2D sampler0;
out vec4 fragment;
void main(void) {
	vec2 st = frag_Tex;
const float alphaGen = 1.0;
	vec4 t = texture( sampler0, st );
	fragment = pow( t * vec4( frag_Color.rgb, alphaGen ), gamma );
} 

 ]

[ 3 ] [ no ] [

 Vertex 

#version 420
layout( location = 0 ) in vec3 position;
layout( location = 1 ) in vec4 color;
layout( location = 2 ) in vec2 tex0;
layout( std140 ) uniform Transforms {
	mat4 viewToClip;
	mat4 modelToView;
};
out vec2 frag_Tex;
out vec4 frag_Color;
void main(void) {
	gl_Position = viewToClip * modelToView * vec4( position, 1.0 );
	frag_Tex = tex0;
	frag_Color = vec4( 1.0 );
} 

 Fragment 

#version 420
in vec2 frag_Tex;
in vec4 frag_Color;
const vec4 gamma = vec4( 1.0 / 2.2 );
uniform sampler2D sampler0;
out vec4 fragment;
void main(void) {
	vec2 st = frag_Tex;
const float alphaGen = 1.0;
	vec4 t = texture( sampler0, st );
	fragment = pow( t * vec4( frag_Color.rgb, alphaGen ), gamma );
} 

 ]

------------------------------------------
textures/force/clwhite
[ 0 ] [ no ] [

 Vertex 

#version 420
layout( location = 0 ) in vec3 position;
layout( location = 1 ) in vec4 color;
layout( location = 2 ) in vec2 tex0;
layout( std140 ) uniform Transforms {
	mat4 viewToClip;
	mat4 modelToView;
};
out vec2 frag_Tex;
out vec4 frag_Color;
void main(void) {
	gl_Position = viewToClip * modelToView * vec4( position, 1.0 );
	frag_Tex = tex0;
	frag_Color = vec4( 1.0 );
} 

 Fragment 

#version 420
in vec2 frag_Tex;
in vec4 frag_Color;
const vec4 gamma = vec4( 1.0 / 2.2 );
uniform sampler2D sampler0;
out vec4 fragment;
void main(void) {
	vec2 st = frag_Tex;
const float alphaGen = 1.0;
	vec4 t = texture( sampler0, st );
	fragment = pow( t * vec4( frag_Color.rgb, alphaGen ), gamma );
} 

 ]

------------------------------------------
textures/marsbase/glass
[ 0 ] [ no ] [

 Vertex 

#version 420
layout( location = 0 ) in vec3 position;
layout( location = 1 ) in vec4 color;
layout( location = 2 ) in vec2 tex0;
layout( std140 ) uniform Transforms {
	mat4 viewToClip;
	mat4 modelToView;
};
out vec2 frag_Tex;
out vec4 frag_Color;
void main(void) {
	gl_Position = viewToClip * modelToView * vec4( position, 1.0 );
	frag_Tex = tex0;
	frag_Color = vec4( 1.0 );
} 

 Fragment 

#version 420
in vec2 frag_Tex;
in vec4 frag_Color;
const vec4 gamma = vec4( 1.0 / 2.2 );
uniform sampler2D sampler0;
out vec4 fragment;
void main(void) {
	vec2 st = frag_Tex;
const float alphaGen = 0.2;
	vec4 t = texture( sampler0, st );
	fragment = pow( t * vec4( frag_Color.rgb, alphaGen ), gamma );
} 

 ]

[ 1 ] [ no ] [

 Vertex 

#version 420
layout( location = 0 ) in vec3 position;
layout( location = 1 ) in vec4 color;
layout( location = 2 ) in vec2 tex0;
layout( std140 ) uniform Transforms {
	mat4 viewToClip;
	mat4 modelToView;
};
out vec2 frag_Tex;
out vec4 frag_Color;
void main(void) {
	gl_Position = viewToClip * modelToView * vec4( position, 1.0 );
	frag_Tex = tex0;
	frag_Color = vec4( 1.0 );
} 

 Fragment 

#version 420
in vec2 frag_Tex;
in vec4 frag_Color;
const vec4 gamma = vec4( 1.0 / 2.2 );
uniform sampler2D sampler0;
out vec4 fragment;
void main(void) {
	vec2 st = frag_Tex;
const float alphaGen = 0.2;
	vec4 t = texture( sampler0, st );
	fragment = pow( t * vec4( frag_Color.rgb, alphaGen ), gamma );
} 

 ]

------------------------------------------
textures/marsbase/grate
[ 0 ] [ yes ] [

 Vertex 

#version 420
layout( location = 0 ) in vec3 position;
layout( location = 1 ) in vec4 color;
layout( location = 2 ) in vec2 tex0;
layout( std140 ) uniform Transforms {
	mat4 viewToClip;
	mat4 modelToView;
};
out vec2 frag_Tex;
out vec4 frag_Color;
void main(void) {
	gl_Position = viewToClip * modelToView * vec4( position, 1.0 );
	frag_Tex = tex0;
	frag_Color = vec4( 1.0 );
} 

 Fragment 

#version 420
#extension GL_ARB_conservative_depth: enable
in vec2 frag_Tex;
in vec4 frag_Color;
const vec4 gamma = vec4( 1.0 / 2.2 );
uniform sampler2D sampler0;
out vec4 fragment;
void main(void) {
	vec2 st = frag_Tex;
const float alphaGen = 1.0;
layout( depth_unchanged ) float gl_FragDepth;
	vec4 t = texture( sampler0, st );
	if ( t.a < 0.5 )
	{
		discard;
	}
	fragment = pow( t * vec4( frag_Color.rgb, alphaGen ), gamma );
} 

 ]

[ 1 ] [ no ] [

 Vertex 

#version 420
layout( location = 0 ) in vec3 position;
layout( location = 1 ) in vec4 color;
layout( location = 2 ) in vec2 tex0;
layout( std140 ) uniform Transforms {
	mat4 viewToClip;
	mat4 modelToView;
};
out vec2 frag_Tex;
out vec4 frag_Color;
void main(void) {
	gl_Position = viewToClip * modelToView * vec4( position, 1.0 );
	frag_Tex = tex0;
	frag_Color = vec4( 1.0 );
} 

 Fragment 

#version 420
in vec2 frag_Tex;
in vec4 frag_Color;
const vec4 gamma = vec4( 1.0 / 2.2 );
uniform sampler2D sampler0;
out vec4 fragment;
void main(void) {
	vec2 st = frag_Tex;
const float alphaGen = 1.0;
	vec4 t = texture( sampler0, st );
	fragment = pow( t * vec4( frag_Color.rgb, alphaGen ), gamma );
} 

 ]

------------------------------------------
textures/marsbase/teleprtr_fx1
[ 0 ] [ no ] [

 Vertex 

#version 420
layout( location = 0 ) in vec3 position;
layout( location = 1 ) in vec4 color;
layout( location = 2 ) in vec2 tex0;
layout( std140 ) uniform Transforms {
	mat4 viewToClip;
	mat4 modelToView;
};
out vec2 frag_Tex;
out vec4 frag_Color;
void main(void) {
	gl_Position = viewToClip * modelToView * vec4( position, 1.0 );
	frag_Tex = tex0;
	frag_Color = vec4( 1.0 );
} 

 Fragment 

#version 420
in vec2 frag_Tex;
in vec4 frag_Color;
uniform mat2 texTransform;
const vec4 gamma = vec4( 1.0 / 2.2 );
uniform sampler2D sampler0;
out vec4 fragment;
void main(void) {
	vec2 st = texTransform * frag_Tex;
const float alphaGen = 0.2;
	vec4 t = texture( sampler0, st );
	fragment = pow( t * vec4( frag_Color.rgb, alphaGen ), gamma );
} 

 ]

[ 1 ] [ no ] [

 Vertex 

#version 420
layout( location = 0 ) in vec3 position;
layout( location = 1 ) in vec4 color;
layout( location = 2 ) in vec2 tex0;
layout( std140 ) uniform Transforms {
	mat4 viewToClip;
	mat4 modelToView;
};
out vec2 frag_Tex;
out vec4 frag_Color;
void main(void) {
	gl_Position = viewToClip * modelToView * vec4( position, 1.0 );
	frag_Tex = tex0;
	frag_Color = vec4( 1.0 );
} 

 Fragment 

#version 420
in vec2 frag_Tex;
in vec4 frag_Color;
uniform mat2 texTransform;
const vec4 gamma = vec4( 1.0 / 2.2 );
uniform sampler2D sampler0;
out vec4 fragment;
void main(void) {
	vec2 st = texTransform * frag_Tex;
const float alphaGen = 0.2;
	vec4 t = texture( sampler0, st );
	fragment = pow( t * vec4( frag_Color.rgb, alphaGen ), gamma );
} 

 ]

[ 2 ] [ no ] [

 Vertex 

#version 420
layout( location = 0 ) in vec3 position;
layout( location = 1 ) in vec4 color;
layout( location = 2 ) in vec2 tex0;
layout( std140 ) uniform Transforms {
	mat4 viewToClip;
	mat4 modelToView;
};
out vec2 frag_Tex;
out vec4 frag_Color;
void main(void) {
	gl_Position = viewToClip * modelToView * vec4( position, 1.0 );
	frag_Tex = tex0;
	frag_Color = vec4( 1.0 );
} 

 Fragment 

#version 420
in vec2 frag_Tex;
in vec4 frag_Color;
uniform mat2 texTransform;
const vec4 gamma = vec4( 1.0 / 2.2 );
uniform sampler2D sampler0;
out vec4 fragment;
void main(void) {
	vec2 st = texTransform * frag_Tex;
const float alphaGen = 0.2;
	vec4 t = texture( sampler0, st );
	fragment = pow( t * vec4( frag_Color.rgb, alphaGen ), gamma );
} 

 ]

[ 3 ] [ no ] [

 Vertex 

#version 420
layout( location = 0 ) in vec3 position;
layout( location = 1 ) in vec4 color;
layout( location = 2 ) in vec2 tex0;
layout( std140 ) uniform Transforms {
	mat4 viewToClip;
	mat4 modelToView;
};
out vec2 frag_Tex;
out vec4 frag_Color;
void main(void) {
	gl_Position = viewToClip * modelToView * vec4( position, 1.0 );
	frag_Tex = tex0;
	frag_Color = vec4( 1.0 );
} 

 Fragment 

#version 420
in vec2 frag_Tex;
in vec4 frag_Color;
const vec4 gamma = vec4( 1.0 / 2.2 );
uniform sampler2D sampler0;
out vec4 fragment;
void main(void) {
	vec2 st = frag_Tex;
const float alphaGen = 0.2;
	vec4 t = texture( sampler0, st );
	fragment = pow( t * vec4( frag_Color.rgb, alphaGen ), gamma );
} 

 ]

------------------------------------------
textures/moon/light15k
[ 0 ] [ no ] [

 Vertex 

#version 420
layout( location = 0 ) in vec3 position;
layout( location = 1 ) in vec4 color;
layout( location = 2 ) in vec2 tex0;
layout( std140 ) uniform Transforms {
	mat4 viewToClip;
	mat4 modelToView;
};
out vec2 frag_Tex;
out vec4 frag_Color;
void main(void) {
	gl_Position = viewToClip * modelToView * vec4( position, 1.0 );
	frag_Tex = tex0;
	frag_Color = vec4( 1.0 );
} 

 Fragment 

#version 420
in vec2 frag_Tex;
in vec4 frag_Color;
const vec4 gamma = vec4( 1.0 / 2.2 );
uniform sampler2D sampler0;
out vec4 fragment;
void main(void) {
	vec2 st = frag_Tex;
const float alphaGen = 1.0;
	vec4 t = texture( sampler0, st );
	fragment = pow( t * vec4( frag_Color.rgb, alphaGen ), gamma );
} 

 ]

[ 1 ] [ no ] [

 Vertex 

#version 420
layout( location = 0 ) in vec3 position;
layout( location = 1 ) in vec4 color;
layout( location = 2 ) in vec2 tex0;
layout( std140 ) uniform Transforms {
	mat4 viewToClip;
	mat4 modelToView;
};
out vec2 frag_Tex;
out vec4 frag_Color;
void main(void) {
	gl_Position = viewToClip * modelToView * vec4( position, 1.0 );
	frag_Tex = tex0;
	frag_Color = vec4( 1.0 );
} 

 Fragment 

#version 420
in vec2 frag_Tex;
in vec4 frag_Color;
const vec4 gamma = vec4( 1.0 / 2.2 );
uniform sampler2D sampler0;
out vec4 fragment;
void main(void) {
	vec2 st = frag_Tex;
const float alphaGen = 1.0;
	vec4 t = texture( sampler0, st );
	fragment = pow( t * vec4( frag_Color.rgb, alphaGen ), gamma );
} 

 ]

[ 2 ] [ no ] [

 Vertex 

#version 420
layout( location = 0 ) in vec3 position;
layout( location = 1 ) in vec4 color;
layout( location = 2 ) in vec2 tex0;
layout( std140 ) uniform Transforms {
	mat4 viewToClip;
	mat4 modelToView;
};
out vec2 frag_Tex;
out vec4 frag_Color;
void main(void) {
	gl_Position = viewToClip * modelToView * vec4( position, 1.0 );
	frag_Tex = tex0;
	frag_Color = vec4( 1.0 );
} 

 Fragment 

#version 420
in vec2 frag_Tex;
in vec4 frag_Color;
const vec4 gamma = vec4( 1.0 / 2.2 );
uniform sampler2D sampler0;
out vec4 fragment;
void main(void) {
	vec2 st = frag_Tex;
const float alphaGen = 1.0;
	vec4 t = texture( sampler0, st );
	fragment = pow( t * vec4( frag_Color.rgb, alphaGen ), gamma );
} 

 ]

------------------------------------------
textures/moon/light2013
[ 0 ] [ no ] [

 Vertex 

#version 420
layout( location = 0 ) in vec3 position;
layout( location = 1 ) in vec4 color;
layout( location = 2 ) in vec2 tex0;
layout( std140 ) uniform Transforms {
	mat4 viewToClip;
	mat4 modelToView;
};
out vec2 frag_Tex;
out vec4 frag_Color;
void main(void) {
	gl_Position = viewToClip * modelToView * vec4( position, 1.0 );
	frag_Tex = tex0;
	frag_Color = vec4( 1.0 );
} 

 Fragment 

#version 420
in vec2 frag_Tex;
in vec4 frag_Color;
const vec4 gamma = vec4( 1.0 / 2.2 );
uniform sampler2D sampler0;
out vec4 fragment;
void main(void) {
	vec2 st = frag_Tex;
const float alphaGen = 1.0;
	vec4 t = texture( sampler0, st );
	fragment = pow( t * vec4( frag_Color.rgb, alphaGen ), gamma );
} 

 ]

[ 1 ] [ no ] [

 Vertex 

#version 420
layout( location = 0 ) in vec3 position;
layout( location = 1 ) in vec4 color;
layout( location = 2 ) in vec2 tex0;
layout( std140 ) uniform Transforms {
	mat4 viewToClip;
	mat4 modelToView;
};
out vec2 frag_Tex;
out vec4 frag_Color;
void main(void) {
	gl_Position = viewToClip * modelToView * vec4( position, 1.0 );
	frag_Tex = tex0;
	frag_Color = vec4( 1.0 );
} 

 Fragment 

#version 420
in vec2 frag_Tex;
in vec4 frag_Color;
const vec4 gamma = vec4( 1.0 / 2.2 );
uniform sampler2D sampler0;
out vec4 fragment;
void main(void) {
	vec2 st = frag_Tex;
const float alphaGen = 1.0;
	vec4 t = texture( sampler0, st );
	fragment = pow( t * vec4( frag_Color.rgb, alphaGen ), gamma );
} 

 ]

[ 2 ] [ no ] [

 Vertex 

#version 420
layout( location = 0 ) in vec3 position;
layout( location = 1 ) in vec4 color;
layout( location = 2 ) in vec2 tex0;
layout( std140 ) uniform Transforms {
	mat4 viewToClip;
	mat4 modelToView;
};
out vec2 frag_Tex;
out vec4 frag_Color;
void main(void) {
	gl_Position = viewToClip * modelToView * vec4( position, 1.0 );
	frag_Tex = tex0;
	frag_Color = vec4( 1.0 );
} 

 Fragment 

#version 420
in vec2 frag_Tex;
in vec4 frag_Color;
const vec4 gamma = vec4( 1.0 / 2.2 );
uniform sampler2D sampler0;
out vec4 fragment;
void main(void) {
	vec2 st = frag_Tex;
const float alphaGen = 1.0;
	vec4 t = texture( sampler0, st );
	fragment = pow( t * vec4( frag_Color.rgb, alphaGen ), gamma );
} 

 ]

------------------------------------------
textures/water/waterfall
[ 0 ] [ no ] [

 Vertex 

#version 420
layout( location = 0 ) in vec3 position;
layout( location = 1 ) in vec4 color;
layout( location = 2 ) in vec2 tex0;
layout( std140 ) uniform Transforms {
	mat4 viewToClip;
	mat4 modelToView;
};
out vec2 frag_Tex;
out vec4 frag_Color;
void main(void) {
	gl_Position = viewToClip * modelToView * vec4( position, 1.0 );
	frag_Tex = tex0;
	frag_Color = vec4( 1.0 );
} 

 Fragment 

#version 420
in vec2 frag_Tex;
in vec4 frag_Color;
uniform float tcModTurb;
uniform mat2 texTransform;
const vec4 gamma = vec4( 1.0 / 2.2 );
uniform sampler2D sampler0;
out vec4 fragment;
void main(void) {
	vec2 st = texTransform * frag_Tex;
	st += tcModTurb;
const float alphaGen = 0.2;
	vec4 t = texture( sampler0, st );
	fragment = pow( t * vec4( frag_Color.rgb, alphaGen ), gamma );
} 

 ]

